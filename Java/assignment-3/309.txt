3-9
import java.util.Comparator;
import java.util.Scanner;
import java.util.TreeSet;

public class assignment309 {
    public static void main(String[] args)
    {
        TreeSet<SavingAccount> savingAccounts = new TreeSet<>(Comparator.comparing(SavingAccount::getAcc_ID));
        Scanner scan= new Scanner(System.in);

        savingAccounts.add(new SavingAccount(30.0,3,"h1",true));
        savingAccounts.add(new SavingAccount(25.0,2,"h2",false));

        BankAccountList b =new BankAccountList(savingAccounts);

        System.out.print("Enter the number of savings accounts : ");
        int number=scan.nextInt();

        for (int i=0;i<number;i++){

            System.out.print("Enter the account ID              : ");
            int id=scan.nextInt();

            System.out.print("Enter the account balance         : ");
            double account=scan.nextDouble();

            System.out.print("Enter the account holder name     : ");
            String name=scan.next();

            System.out.print("Enter is it salary account or not : ");
            boolean accType=scan.nextBoolean();

            b.addSavingAccount(new SavingAccount(account,id,name,accType));
        }

        b.displaySavingAccountIds().forEach(f -> System.out.println(f));
        scan.close();
    }
}
  







public class SavingAccount extends assignment309 {
    private double acc_balance;
    private int acc_ID;
    private String accountHolderName;
    private boolean isSalaryAccount;

    public SavingAccount(double acc_balance, int acc_ID, String accountHolderName, boolean isSalaryAccount) {
        super();
        this.setAcc_balance(acc_balance);
        this.acc_ID = acc_ID;
        this.setAccountHolderName(accountHolderName);
        this.setSalaryAccount(isSalaryAccount);
    }

    public int getAcc_ID() {
        return acc_ID;
    }

    public String getAccountHolderName() {
        return accountHolderName;
    }

    public void setAccountHolderName(String accountHolderName) {
        this.accountHolderName = accountHolderName;
    }

    public double getAcc_balance() {
        return acc_balance;
    }

    public void setAcc_balance(double acc_balance) {
        this.acc_balance = acc_balance;
    }

    public boolean isSalaryAccount() {
        return isSalaryAccount;
    }

    public void setSalaryAccount(boolean isSalaryAccount) {
        this.isSalaryAccount = isSalaryAccount;
    }

    public double withdraw(double x) {
        if (acc_balance < x)
            return -1;
        else {
            acc_balance -= x;
            return acc_balance;
        }
    }

    public double deposit(double x) {
        acc_balance += x;
        return acc_balance;
    }



mport java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.TreeSet;

public class BankAccountList {
    private TreeSet<SavingAccount> savingAccounts = new TreeSet<>(Comparator.comparing(SavingAccount::getAcc_ID));

    public BankAccountList()
    {
        super();

    }

    public BankAccountList(TreeSet<SavingAccount> savingAccounts)
    {
        this.savingAccounts = savingAccounts;
    }

    int  a= savingAccounts.size();

    public boolean addSavingAccount(SavingAccount savingAccount) {
        savingAccounts.add(savingAccount);
        int b= savingAccounts.size();
        if (b==a)
            return false;
        return true;
    }

    public List<Integer> displaySavingAccountIds() {
        List<Integer> list = new ArrayList<>();
        savingAccounts.stream().forEach(e -> list.add(e.getAcc_ID()));
        return list;
    }
}

