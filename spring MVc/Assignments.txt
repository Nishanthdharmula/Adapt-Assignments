



Assignment
Q-1
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>FIRSTSPRINGMVCPROJECT</display-name>
  
  <servlet>
<servlet-name>spring-dispatcher</servlet-name> 
<servlet-class>
           org.springframework.web.servlet.DispatcherServlet 
</servlet-class>
</servlet>

<servlet-mapping>

<servlet-name>spring-dispatcher</servlet-name> 
<url-pattern>/</url-pattern>

</servlet-mapping>

</web-app>


<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

<bean id="HandlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />


<bean name="/welcome.html" class="com.spring.MVC.HelloController" />

<bean id="viewResolver"
       class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="prefix"> 
       <value>/WEB-INF/</value>
       </property>
<property name="suffix"> 
<value>.jsp</value>

</property>

</bean>

</beans>
package com.spring.MVC;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.AbstractController;

public class HelloController extends AbstractController {
	
	@Override
	protected ModelAndView handleRequestInternal(HttpServletRequest request, 
			HttpServletResponse response) throws Exception {
		
		ModelAndView modelandview = new ModelAndView("HelloPage"); 
		modelandview.addObject("welcomeMessage", "Hello world");
		return modelandview;
		
	}
	

}


<html>
<body>

<h1>First Spring MVC Application Demo</h1>

<h2>${welcomeMessage}</h2>

</body> 
</html>




Q-2
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:mvc="http://www.springframework.org/schema/mvc"

xsi:schemaLocation ="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<context:component-scan base-package="com.spring.MVC2.Studentlogincontroller" />

<mvc:annotation-driven/>

<bean id="viewResolver"
       class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="prefix"> 
       <value>/WEB-INF/</value>
       </property>
<property name="suffix"> 
<value>.jsp</value>

</property>

</bean>

</beans>

package com.spring.MVC2;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class StudentLoginController {
	
	@RequestMapping(value="/loginDetails.html", method = RequestMethod.GET) 
	public ModelAndView getLoginDetails() {

		ModelAndView model = new ModelAndView("LoginDetails");
		return model;
	}

		@RequestMapping(value="/submitLoginDetails.html", method = RequestMethod.POST) 
		public ModelAndView submitLoginDetails(@ModelAttribute("login1") Login login1) {


		ModelAndView model = new ModelAndView("LoginSuccess"); 
		model.addObject ("headerMessage", "ums service, Lpu");

		return model;
		}
}

package com.spring.MVC2;

public class Login {
	
	private String loginUserName;
	private String loginPassword;
	private String loginEmail;
	
	public String getLoginUserName() { 
		return loginUserName;

	} 
	public void setLoginUserName(String loginUserName) { 
		this.loginUserName = loginUserName;

	} 
	public String getLoginPassword() { 
		return loginPassword;

	} 
	public void setloginPassword(String loginPassword) { 
		this.loginPassword = loginPassword;

	}
	public String getloginEmail() { 
		return loginEmail;

	} 
	public void setLoginEmail(String loginEmail) { 
		this.loginEmail = loginEmail;

	}


}







<html> 
<body>

<h1>${headerMessage}</h1>

<h3>Congratulations!! you have loged in successfully</h3>

<h2>Details submitted by you:: </h2>

<table>

<tr>

<td>Login UserName : </td>

<td>${login1.loginUserName}</td>

</tr> 
<tr>

<td>Login Password :</td> 

<td>$[login1.loginPassword}</td>

</tr>
<tr>

<td>Login Email : </td>

<td>${login1.loginEmail}</td>

</tr>

</table> 
</body> 
</html>


<html>

<body>

<h1> Lpu service for Students</h1>

<form action="/FIRSTSPRINGMVCPROJECT/submitLoginDetails.html" method="post">

<p> 
Login's UserName : <input type="text" name="loginUserName" />

</p>

<p>
Login's Password : <input type="text" name="loginPassword" />
</p>

<p>
Login's Email : <input type="text" name="loginEmail" />
</p>

<input type="submit" value="Submit this details by clicking here" />

</form>

</body> 
</html>




3

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>FirstSpringMVC</display-name>
  <welcome-file-list>
   <welcome-file>login.jsp</welcome-file>
  </welcome-file-list>
  
   <servlet>
  <servlet-name>spring-dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  <init-param>
	            <param-name>contextConfigLocation</param-name>
	            <param-value>/WEB-INF/valid-servlet.xml</param-value>
	        </init-param>
	       
	           <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  <servlet-name>spring-dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>




<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.spring.MVC"></context:component-scan> 
    
    <mvc:annotation-driven />
    
     <bean id="viewResolver"
    	class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="prefix">
            <value>/WEB-INF/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
 </bean>
 </beans>
 





package com.spring.MVC;

public class ResitrationController {

}


package com.spring.MVC;

public class User {
	String userName;
	String passWord;
	String email;
	public User(String userName, String passWord,String email) {
		this.userName=userName;
		this.passWord=passWord;
		this.email=email;

	}
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public String getPassWord() {
		return passWord;
	}
	public void setPassWord(String passWord) {
		this.passWord = passWord;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}

}





package com.spring.MVC;

public class User {
	String userName;
	String passWord;
	String email;
	public User(String userName, String passWord,String email) {
		this.userName=userName;
		this.passWord=passWord;
		this.email=email;

	}
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public String getPassWord() {
		return passWord;
	}
	public void setPassWord(String passWord) {
		this.passWord = passWord;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}

}



package com.spring.MVC;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class UserController {
	@ResponseBody
	@RequestMapping("/login")
public ModelAndView welcomeUser(@RequestParam("userName") String u,@RequestParam("passWord") String p,@RequestParam("email") String e ) {
		ModelAndView m = new ModelAndView();
	UserAuthenticator q = new UserAuthenticator();
	ModelAndView w=q.getAuthentication(u, p, e);
	
	return w;
}

}


package com.spring.MVC;

import org.springframework.web.servlet.ModelAndView;

public class UserAuthenticator extends UserDatabase{
	ModelAndView n = new ModelAndView();
	public ModelAndView getAuthentication(String u, String p, String e) {
		for(User t: list) {
			if(t.userName ==u && t.passWord==p && t.email==e) {
				n.setViewName("show1.jsp");
				}
			else n.setViewName("login.jsp");
			}
		return n;
	}

}


package com.spring.MVC;

import java.util.ArrayList;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class UserDatabase {
	ArrayList<User>list= new ArrayList<User>();
	@RequestMapping("/register")
	public void addUserToDataBase() {
		User u1= new User("Adam","123","Adam123");
		User u2= new User("Max","qwe","Maxqwe");
		User u3= new User("Tyson","asd","Tysonasd");
		list.add(u1);
		list.add(u2);
		list.add(u3);
	}

}


<html>
<body>
<h2>Welcome give me your user credentials</h2>
<form action="login">
<input type="text" name="userName"><br>
<input type="text" name="passWord"><br>
<input type="text" name="email"><br>
<input type="submit">
</body>
</html>


<html>
<body>
<h2>Invalid User Credentials</h2>
</body>
</html>


<html>
<body>
<h2>Succesfull login</h2>
</body>
</html>




Q-4

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>FirstSpring</display-name>
  
  
  <servlet>
  <servlet-name>spring-dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  
  </servlet>
  <servlet-mapping>
  <servlet-name>spring-dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
  <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-dispatcher-servlet.xml</param-value>
	</context-param>
 
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
</web-app>


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
 
<context:component-scan base-package="com.spring.Mvc4"></context:component-scan> 

<context:annotation-config></context:annotation-config>

 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 <property name="prefix">
 <value>/WEB-INF/</value>
 
 </property>
 <property name="suffix">
 <value>.jsp</value>
 </property>
 </bean>
 </beans>


package com.spring.Mvc4;


import org.apache.catalina.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class UserLoginController {
	@Autowired
	private UserD userD;
	
	@RequestMapping(value="/login", method=RequestMethod.POST)
	public ModelAndView userRegistration(@RequestParam("username") String username,
										@RequestParam("password") String password,
										@RequestParam("email") String email)
	{
		
		ModelAndView n=new ModelAndView();
		User user=new User();
		user.setUsername(username);
		user.setPassword(password);
		user.setEmail(email);
		
	String name= userD.loginUser(user);
	if(name!=null) {
		n.addObject("msg","Welcome" +name+ "Login Successful" );
		n.setViewName("welcome");
	}
	else
	{
		n.addObject("msg", "Invalid User Id or Password");
		n.setViewName("login");
	}
	return n;
}

}

package com.spring.Mvc4;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class UserRegistrationController {
	@Autowired
	private UserDao userDao;
	
	@RequestMapping(value="/register", method=RequestMethod.POST)
	public ModelAndView userRegistration(@RequestParam("username") String username,
										@RequestParam("password") String password,
										@RequestParam("email") String email)
	{
		
		ModelAndView mv=new ModelAndView();
		User user=new User();
		user.setUsername(username);
		user.setPassword(password);
		user.setEmail(email);
		
		int counter= userDao.registerUser(user);
		if(counter>0)
		{
			mv.addObject("msg","User Registration Successful");
		}
		else
		{
			mv.addObject("msg","Error- check the log");
		}
		mv.setViewName("registration");
		return mv;
	}
	

}



package com.spring.Mvc4;

public class User {
	private String username;
	private String password;
	private String email;
	
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
	

}



package com.spring.Mvc4;

public interface UserD {
	
	
		public int registerUser(User user);
		public String loginUser(User user);
	

}



package com.spring.Mvc4;

public class UserDImp implements UserD{
private JdbcTemplate jdbcTemplate;
	
	public UserDImp(DataSource dataSource) {
		jdbcTemplate = new JdbcTemplate(dataSource);
	}

	@Override
	public int registerUser(User user) {
		// TODO Auto-generated method stub
		String sql = "INSERT INTO USER_DATA VALUES(?,?,?)";

		try {
			
			int counter= jdbcTemplate.update(sql, new Object[] {user.getUsername(),user.getPassword(),user.getEmail()});
			return counter;

		} catch (Exception e) {
			e.printStackTrace();
			return 0;
		}
	}

	@Override
	public String loginUser(User user) {
		
			
String sql = "SELECT USER_ID FROM USER_DATA WHERE USER_ID=? AND USER_PASS=? AND USER_EMAIL=?";
		
		try {

			String username = jdbcTemplate.queryForObject(sql, new Object[] {
					user.getUsername(), user.getPassword() }, String.class);

			return username;
			
		} catch (Exception e) {
			return null;
		}
	
		
	}


}




<html>
<head>
<title>User Registration and Login</title>
</head>

<body>
<h2>User Registration and Login</h2>

<form action="login" method="post">
	<pre>
	
	<strong>Register Here | <a href="registration.jsp"> Click Here to Register</a></strong>
	Username: <input type="text" name="username"/>
	Password: <input type="text" name="password"/>
	Email: <input type="text" name="email"/>
	
	<input type="submit" value="Login"/>
	</pre>

</form>
${msg}
</body>





<html>
<head>
<title>User Registration and Login</title>
</head>

<body>
<h2>User Registration and Login</h2>

<form action="register" method="post">
	<pre>
	
	<strong>Register Here | <a href="login.jsp"> Click Here to Login</a></strong>
	Username: <input type="text" name="username"/>
	Password: <input type="text" name="password"/>
	Email: <input type="text" name="email"/>
	
	<input type="submit" value="Login"/>
	</pre>

</form>
${msg}
</body>

</html>

<html>
<body>
<h2>Hello World!</h2>
</body>
</html>



<html>
<head>
<title>Registration and Login</title>
</head>
<body>
{$msg}
</body>
</html>




Q-6

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>FirstSpring</display-name>
  
  
  <servlet>
  <servlet-name>spring-dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  
  </servlet>
  <servlet-mapping>
  <servlet-name>spring-dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
  <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-dispatcher-servlet.xml</param-value>
	</context-param>
 
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
</web-app>


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 
 
<context:component-scan base-package="com.spring.Mvc4"></context:component-scan> 

<mvc:annotation-driven/>

 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 <property name="prefix">
 <value>/WEB-INF/</value>
 
 </property>
 <property name="suffix">
 <value>.jsp</value>
 </property>
 </bean>
 </beans>



package com.spring.Mvc6;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class CustomerController {
	@RequestMapping("/register")
	public String displayRegister(Model m)
	{
		m.addAttribute("customer", new Customer());
		return "registration";
	}
	
	@RequestMapping("/registeragain")
	public String submitForm(@Valid@ModelAttribute("customer") Customer e, BindingResult br)
	{
		if(br.hasErrors())
		{
			return "registration";
		}
		else
		{
			return "final";
		}
	}
	
}




package com.spring.Mvc6;

public class Customer {
	private String username;
	private String password;
	private String email;
	private String city;

	private long contact;
	private long zipcode;

	public  Customer()
	{
		
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public long getContact() {
		return contact;
	}

	public void setContact(long contact) {
		this.contact = contact;
	}

	public long getZipcode() {
		return zipcode;
	}

	public void setZipcode(long zipcode) {
		this.zipcode = zipcode;
	}
	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}



}



<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %> 
<html>

<head><style> .error{color:red} </style> </head>
<body>
<form action="registeragain" modelAttribute="customer">

<table>

<tr> 
		<td><p>Username</p></td>
		<td><input type="text" name="username"/></td>
		<form:errors path="username" cssClass="error"/>
	</tr>
		
	<tr> 
		<td><p>Email</p></td>
		<td><input type="text" name="email"/></td>
		<form:errors path="email" cssClass="error"/>
	</tr>
	
	<tr> 
		<td><p>Password</p></td>
		<td><input type="password" name="password"/></td>
		<form:errors path="password" cssClass="error"/>
	</tr>
	
	<tr> 
		<td><p>Contact</p></td>
		<td><input type="number" name="contact"/></td>
		
	</tr>
	
	<tr> 
		<td class="select">City </td>
		<td>
		<select>
		<option value="Hyderabad">Hyderabad</option>
		<option value="Bangalore">Bangalore</option>
		<option value="Pune">Pune</option>
		<option value="Mumbai">Mumbai</option>
		<option value="Chennai">Chennai</option>
		</select>
		</td>
		
	</tr>
	
	<tr> 
		<td><p>ZipCode</p></td>
		<td><input type="number" name="zip"/></td>
		<form:errors path="zip" cssClass="error"/>
	</tr>
	<form:errors path="password" cssClass="error"></form:errors>
	<form:errors path="username" cssClass="error"></form:errors>

</table>
<input type="submit" value="Register"/>





</form>

</body>
</html>


<html>
	<body>
	<h2> Registration Successful</h2>
	<br>
	<h3>Customer Details</h3>
	Customer Name: ${customer.username}<br>
	Customer Email:${customer.email}<br>
	Customer Contact: ${customer.contact}
	</body>
	</html>



<html>  
<head>

</head>
<body>  
<center>
<h1>Welcome Users </h1>

<a href="register">Click here to Register</a>  
</center>
</body>  
</html>  



Q-8

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>FirstSpring</display-name>
  
  
  <servlet>
  <servlet-name>spring-dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  
  </servlet>
  <servlet-mapping>
  <servlet-name>spring-dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 
 
<context:component-scan base-package="com.spring.Mvc8"></context:component-scan> 

<mvc:annotation-driven/>

 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 <property name="prefix">
 <value>/WEB-INF/</value>
 
 </property>
 <property name="suffix">
 <value>.jsp</value>
 </property>
 </bean>
 <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basename" value="/WEB-INF/webLang"/>
    </bean>
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    <property name="defaultLocale" value="en" />
	</bean>
	
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	    <property name="paramName" value="siteLang" />
	</bean>
	 
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <property name="interceptors">
	        <list>
	            <ref bean="localeChangeInterceptor" />
	        </list>
	    </property>
	</bean>
 
 </beans>








<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" isELIgnored="false"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Internationalisation</title>
</head>
<body>
<a href="/FirstSpring/myWeb.html?siteLang=en">English</a>
<a href="/FirstSpring/myWeb.html?siteLang=fr">French</a>
<a href="/FirstSpring/myWeb.html?siteLang=vi">Vietnamese</a>
<form action="/getNothing">

<table>
	<tr>
	<td><spring:message code="label.username"/></td>
	<td><input type="text" name="username"/></td>
	</tr>
	<tr>
	<td><spring:message code="label.password"/></td>
	<td><input type="password" name="password" /></td>
	</tr>
	<tr><td><button type="submit">Submit</button></td></tr>
</table>

</form>
</body>
</html>

label.username=Username
label.password=Password


label.username=Nom d'utilisateur
label.password=Mot de passe

label.username=tên tài kho\u1EA3n
label.password=M\u1EADt kh\u1EA9u



<html>
<body>
<h2><a href="/FirstSpring/myWeb">Click here to Login</a></h2>
</body>
</html>


package com.spring.Mvc8;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class SomeController {
	@RequestMapping("/myWeb")
	public ModelAndView myfun() {
		ModelAndView mv = new ModelAndView("myWeb");
		return mv;
	}

}




Q-9

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>FirstSpring</display-name>
  
  
  <servlet>
  <servlet-name>spring-dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  
  </servlet>
  <servlet-mapping>
  <servlet-name>spring-dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 
 
<context:component-scan base-package="com.spring.Mvc4"></context:component-scan> 

<mvc:annotation-driven/>

 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 <property name="prefix">
 <value>/WEB-INF/</value>
 
 </property>
 <property name="suffix">
 <value>.jsp</value>
 </property>
 </bean>
 <bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">    
<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>    
<property name="url" value="jdbc:mysql://localhost:3306/test"></property>    
<property name="username" value="root"></property>    
<property name="password" value=""></property>    
</bean>    
    
<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">    
<property name="dataSource" ref="ds"></property>    
</bean>    
    
<bean id="dao" class="com.madhu.springMVC9.dao.EmpDao">    
<property name="template" ref="jt"></property>    
</bean>      
 
 </beans>


<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>      
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">  
<html>  
<body>  
<h1>Employees List</h1>    
<table border="2" width="70%" cellpadding="2">    
<tr><th>Id</th><th>Name</th><th>Salary</th></tr>    
   <c:forEach var="emp" items="${msg}">     
<tr>    
<td>${emp.id}</td>    
<td>${emp.name}</td>    
<td>${emp.salary}</td>    
</tr>    
</c:forEach>    
   </table>    
   <br/>    
   <a href="/FirstSpring/viewemp/1">1</a>     
   <a href="/FirstSpring/viewemp/2">2</a>     
   <a href="/FirstSpring/viewemp/3">3</a>    
</body>  
</html>  



<!DOCTYPE html>  
	<html>  
	<body>  
	<a href="viewemp/1">View Employees</a> 
	<br></br>
	<a href="xlsSheet">Get Employees in xls-sheet</a> 
	<a href="pdf">Get Employees in pdf</a>  
	</body>  
	</html>  


package com.spring.Mvc9;

public class Employee {
	private int id;    
	private String name;    
	private float salary;
	public Employee() {
		
	}
	public Employee(int id, String name, float salary) {
		super();
		this.id = id;
		this.name = name;
		this.salary = salary;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public float getSalary() {
		return salary;
	}
	public void setSalary(float salary) {
		this.salary = salary;
	}
	

}


package com.spring.Mvc9;

public class EmpDao {
	
dbcTemplate template;    
    
	public void setTemplate(JdbcTemplate template) {    
	    this.template = template;    
	}    
	    
	public List<Employee> getEmployeesByPage(int pageid,int total){    
	    String sql="select * from emp limit "+(pageid-1)+","+total;    
	    return template.query(sql,new RowMapper<Employee>(){    
	        public Employee mapRow(ResultSet rs, int row) throws SQLException {    
	            Employee e=new Employee();    
	            e.setId(rs.getInt(1));    
	            e.setName(rs.getString(2));    
	            e.setSalary(rs.getFloat(3));    
	            return e;    
	        }    
	    });    
	}
	public List<Employee> getAllEmployees(){
		String sql = "select * from emp";
		return template.query(sql,new RowMapper<Employee>(){ 
			public Employee mapRow(ResultSet rs, int row) throws SQLException{
				Employee e2=new Employee();
				e2.setId(rs.getInt(1));
				e2.setName(rs.getString(2));
				e2.setSalary(rs.getFloat(3));
				return e2;
			}
		});
	}

}







package com.spring.Mvc9;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class pdfController {
	@Autowired    
    EmpDao dao; 
	
	@RequestMapping("/pdf")
	public ModelAndView getPdf() {
		List<Employee> empList = (List<Employee>) dao.getAllEmployees();
		
		return new ModelAndView(new PdfService(), "empList", empList);
	}
}


package com.spring.Mvc9;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import sun.invoke.empty.Empty;

@Controller
public class XlsController {
	@Autowired    
    Empty dao; 
	@RequestMapping(value="/xlsSheet", method=RequestMethod.GET)
	public ModelAndView getExcel(){
	    List<Employee> empList = (List<Employee>) dao.getAllEmployees();		
	    ModelAndView mv = new ModelAndView(new String(), "empList", empList);
	    return mv;
	}
}


package com.spring.Mvc9;

import org.springframework.stereotype.Service;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;




@Service
public class PdfService extends AbstractITextPdfView{

	@Override
	protected void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		@SuppressWarnings("unchecked")
		List<Employee> empList = (List<Employee>) model.get("empList");
        
        document.add(new Paragraph("Employee List"));
         
        PdfPTable table = new PdfPTable(3);
        table.setWidthPercentage(100.0f);
        table.setWidths(new float[] {3.0f, 2.0f, 2.0f});
        table.setSpacingBefore(10);
         
       
        Font font = FontFactory.getFont(FontFactory.HELVETICA);
      
        PdfPCell cell = new PdfPCell();
        
        cell.setPadding(5);
        cell.setPhrase(new Phrase("Id", font));
        table.addCell(cell);
         
        cell.setPhrase(new Phrase("Name", font));
        table.addCell(cell);
 
        cell.setPhrase(new Phrase("Salary", font));
        table.addCell(cell);
         
        // write table row data
        for (Employee emp : empList) {
            table.addCell(String.valueOf(emp.getId()));
            table.addCell(emp.getName());
            table.addCell(String.valueOf(emp.getSalary()));
           
        }
         
        document.add(table);
         
    }

}





